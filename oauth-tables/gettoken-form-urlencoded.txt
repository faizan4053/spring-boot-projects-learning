@PostMapping(path = "/gettoken", consumes = { MediaType.APPLICATION_FORM_URLENCODED_VALUE }, produces = {
			MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity<String> getaccessToken(@RequestParam MultiValueMap<String, String> userCredentials) {
		ResponseEntity<String> response = null;
		RestTemplate restTemplate = new RestTemplate();
		MultiValueMap<String, String> body = new LinkedMultiValueMap<>();
		body.addAll("username", userCredentials.get("userName"));
		body.addAll("password", userCredentials.get("password"));
		body.add("grant_type", "password");

		String credentials = AuthServiceConstants.CLIENT_ID+":"+AuthServiceConstants.CLIENT_PASSWORD;
		String encodedCredentials = new String(Base64.encodeBase64(credentials.getBytes()));

		HttpHeaders headers = new HttpHeaders();
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		headers.add("Authorization", "Basic " + encodedCredentials);

		HttpEntity<?> request = new HttpEntity<Object>(body, headers);
		String access_token_url = baseUri+"oauth/token";
		response = restTemplate.exchange(access_token_url, HttpMethod.POST, request, String.class);
		return response;
	}