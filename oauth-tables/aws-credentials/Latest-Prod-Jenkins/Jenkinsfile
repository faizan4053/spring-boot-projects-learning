pipeline {
    agent any

	tools {
        jdk 'jdk11'
    }

    parameters {
    	choice(name:'BRANCH',choices: ['authservice','productservice','userservice','searchservice'],description:'Service to be used for version deployment on prod')
    }

    environment { 
    	dockerImage = ''
       	KUBECONFIG ='/home/ubuntu/config'
        REPO_URL='https://tools.publicis.sapient.com/bitbucket/scm/psms/productphase-authservice.git'
        ECR_URL = 'https://364768860491.dkr.ecr.us-east-1.amazonaws.com'
		REGISTRY = "eldorado:auth-$BUILD_NUMBER"
		REGISTRY_CREDENTIALS = 'ecr:us-east-1:prod-aws-access'
		IMAGE_PREFIX = '364768860491.dkr.ecr.us-east-1.amazonaws.com'
		DEPLOYMENT_NAME=env.BRANCH.replaceAll('service','')
    }


    stages {
        
    stage("Release Versions") {
            steps {
                script {
                withCredentials([gitUsernamePassword(credentialsId: 'bitbucket-user-account')]) {
                    def gettags = sh(script:'git ls-remote -t https://tools.publicis.sapient.com/bitbucket/scm/psms/productphase-$BRANCH.git',returnStdout:true).trim()
                    env.TAGS = gettags.readLines().collect { it.split()[1].replaceAll('refs/tags/', '')}.join("\n")
                    env.RELEASE_SCOPE = input message: 'User input required', ok: 'Release!',
                            parameters: [choice(name: 'RELEASE_SCOPE', choices: env.TAGS, description: 'What is the release version?')]
                    }
                    env.REGISTRY="eldorado:$DEPLOYMENT_NAME-$RELEASE_SCOPE"
                }

                echo "${env.RELEASE_SCOPE}"
                echo "${params.BRANCH}"
                echo env.DEPLOYMENT_NAME
                // env.REGISTRY="eldorado:$DEPLOYMENT_NAME-$RELEASE_SCOPE"
            }
        }

   
    stage('Take Release Pull')
    {
    	steps{
    		echo "Pulling Branch"
    		withCredentials([gitUsernamePassword(credentialsId: 'bitbucket-user-account',
                 gitToolName: 'git-tool')]) {
  				 sh 'git clone --depth 1 --branch $RELEASE_SCOPE https://tools.publicis.sapient.com/bitbucket/scm/psms/productphase-$BRANCH.git .'
			}
    	}
    }
	
	stage('Compile')
	{
	    steps{
           // echo env.GIT_BRANCH
	       sh '''chmod 777 mvnw 
		    ./mvnw clean compile'''	
		}
	}
	
	stage('Test')
	{
		steps{
			sh '''
		    ./mvnw test'''	
		}
	}

	stage('Create JAR') {

		steps {
			sh '''
		    	./mvnw install'''	
		}
	}


	stage('Building Image') { 
    	
        steps { 
                script {
                    dockerImage = docker.build(REGISTRY)
                }
            } 
        }
        
	stage('Push Image') {
		steps {
	            script {
	                docker.withRegistry(ECR_URL, REGISTRY_CREDENTIALS) {
	                    dockerImage.push()
	                sh "docker image rmi -f $IMAGE_PREFIX/$REGISTRY"
	                sh '''docker rmi $(docker images --filter=reference="*$DEPLOYMENT_NAME-*" -q)'''
	                } 
	            }
	        }
		}
	stage ('Deploy Image') {
        steps {
        		withAWS(credentials:'prod-aws-access')
        		{ 
	        		sh '''
		            kubectl apply -f $DEPLOYMENT_NAME-service.yml -n production
		            kubectl apply -f $DEPLOYMENT_NAME-deployment.yml -n production
		        	kubectl set image deployment/$DEPLOYMENT_NAME-deployment $DEPLOYMENT_NAME=$IMAGE_PREFIX/$REGISTRY -n production''' 
	        	}
	        }
		}

	}
	
	post{
	    always{
	        echo "Deleting Directory"
	        deleteDir()
	    }
	}
}
